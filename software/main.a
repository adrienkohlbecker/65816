!to "main.bin", plain
!cpu 65816
!initmem $ea

*=$8000
main:
  ; put CPU in native mode
  clc
  xce

  ; set registers to 16 bits (Set bits m and x to 0 in CPU status register)
  rep #%00110000
  !rl
  !al

; ### Test bank0 RAM

restart:
  ; load into X the address of the end of RAM
  ldx #$7f7f
  dex ; align to 16 bits

loop:
   ; store 16 bits of data at X and X+1 and verify we read the same thing
  txa
  sta $0000,X
  cmp $0000,X
  bne fail

  ; decrement address
  dex
  dex

  ; continue until X=0
  bne loop

; ### Test extended RAM

  ldy #$8 ; store bank number 8 into Y

loop_dbr:
  ; set indexes to 8 bits
  sep #%...1....
	!rs

  phy
  plb ; pull value into Data Bank Register, effectively changing bank for all data accesses

  ; set indexes to 16 bits
  rep #%...#....
	!rl

  ldx #$ffff
  dex ; align to 16 bits

loop_ext:
   ; store 16 bits of data at X and X+1 and verify we read the same thing
  txa
  sta $0000,X
  cmp $0000,X
  bne fail

  ; decrement address
  dex
  dex

  ; continue until X=0
  bne loop_ext

  ; increment Y
  iny
  cpy #$10
  bne loop_dbr
  jmp restart

fail:
  wai

*=$fffc
  !word main
  !word $eaea
