!to "main.bin", plain
!cpu 65816
!initmem $ea

; Memory Map
;
; 0000 0000 0000 0000 0000 0000 - 0000 0000 1111 1111 1111 1111 | 000000 00FFFF | Bank 0 (see below)
; 1111 0000 0000 0000 0000 0000 - 1111 0111 1111 1111 1111 1111 | F00000 F7FFFF | Extended RAM
;
; Bank0:
;
; 0000 0000 0000 0000 - 0000 0000 1111 1111 | 0000 - 00FF | Direct page
; 0000 0001 0000 0000 - 0000 0001 1111 1111 | 0100 - 01FF | Stack
; 0000 0010 0000 0000 - 0111 1111 0111 1111 |Â 0200 - 7F7F | General Purpose RAM
; 0111 1111 1000 0000 - 0111 1111 1111 1111 | 7F80 - 07FF | I/O
;
; I/O:
;
; 0111 1111 1000 0000 - 0111 1111 1000 1111 | 7F80 - 7F8F | I/O #0 | 65C22 VIA
; 0111 1111 1001 0000 - 0111 1111 1001 1111 | 7F90 - 7F9F | I/O #1
; 0111 1111 1010 0000 - 0111 1111 1010 1111 | 7FA0 - 7FAF | I/O #2
; 0111 1111 1011 0000 - 0111 1111 1011 1111 | 7FB0 - 7FBF | I/O #3
; 0111 1111 1100 0000 - 0111 1111 1100 1111 | 7FC0 - 7FCF | I/O #4
; 0111 1111 1101 0000 - 0111 1111 1101 1111 | 7FD0 - 7FDF | I/O #5
; 0111 1111 1110 0000 - 0111 1111 1110 1111 | 7FE0 - 7FEF | I/O #6
; 0111 1111 1111 0000 - 0111 1111 1111 1111 | 7FF0 - 7FFF | I/O #7

!address IO_0 = $7F80
!address IO_1 = $7F90
!address IO_2 = $7FA0
!address IO_3 = $7FB0
!address IO_4 = $7FC0
!address IO_5 = $7FD0
!address IO_6 = $7FE0
!address IO_7 = $7FF0

*=$8000
main:
  ; initialize stack pointer to 01FF
  ldx #$ff
  txs

  ; put CPU in native mode
  clc
  xce

  ; set registers to 8 bits (Set bits m and x to 1 in CPU status register)
  sep #%00110000
  !rs
  !as

  ; initialize devices
  jsr via_init
  jsr lcd_init
  jsr acia_init

  lda # "H"
  jsr print_char
  lda # "e"
  jsr print_char
  lda # "l"
  jsr print_char
  lda # "l"
  jsr print_char
  lda # "o"
  jsr print_char
  lda # ","
  jsr print_char
  lda # " "
  jsr print_char
  lda # "W"
  jsr print_char
  lda # "o"
  jsr print_char
  lda # "r"
  jsr print_char
  lda # "l"
  jsr print_char
  lda # "d"
  jsr print_char
  lda # "!"
  jsr print_char

  stp

!source "lib/lcd.a"
!source "lib/acia.a"

*=$fffc
  !word main
  !word $eaea
